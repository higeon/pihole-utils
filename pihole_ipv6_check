#!/bin/bash

###########################################################################

# pihole_ipv6_check

# Checks the Pi-hole server's current IPv6 address and updates the
# IPv6 address configured in /etc/pihole/setupVars.conf if necessary.
# Fixes Pi-hole timeout issue reported at http://bit.ly/2EHWSFy.

# Part of https://github.com/stevejenkins/pihole-utils/

# Version 2.2 - Mar 24, 2019 - Steve Jenkins (stevejenkins.com)
# Rename script for uniformity
<<<<<<< HEAD:pihole_ipv6_check
=======
# Change default adapter to eth0
>>>>>>> 98b88fd794a99680e7901c282c793addf191e16c:pihole_ipv6_check
# Add repo link in script comments

# Version 2.1 - Jan 20, 2019 - Steve Jenkins (stevejenkins.com)
# User can select which adapter is used for IPv6 check

# Version 2.0 - Jan 20, 2019 - Steve Jenkins (stevejenkins.com)
# Changed local IPv6 check method to support wider range of Linux variants

# Version 1.1 - Feb 14, 2018 - Steve Jenkins (stevejenkins.com)
# Fixed awk statement for current Pi-hole configured address
# Modernized shell script expressions
# Added comments to script

# Version 1.0 - linuxpng (https://pastebin.com/Wd0Qyfyw)
# Original version of script 

# USAGE
# You can run ./pihole_ipv6_check from the command line, or run it hourly by
# adding the following to your crontab:

# @hourly /usr/local/bin/pihole-utils/pihole_ipv6_check > /dev/null 2>&1 #Check Pi-hole IPv6 configuration

###########################################################################
# USER-CONTROLLED OPTIONS

PIHOLE_ADAPTER=eth0

###########################################################################

# Only used for debugging
# set -x

# Check host's current Global IPv6 address
current_ipv6=$(ip -6 addr show dev $PIHOLE_ADAPTER | awk '/inet6/{print $2}' | head -n 1 | awk -F'/' '{print $1}')
printf "\nCurrent IPv6 address: $current_ipv6\n"

# Check IPv6 address configured in Pi-hole
pihole_ipv6=$(grep IPV6_ADDRESS < /etc/pihole/setupVars.conf | awk -F '=' '{print $2}')

printf "\nPi-hole configured IPv6 address: $pihole_ipv6\n"

# Exit if IPv6 addresses match
if [ "$current_ipv6" = "$pihole_ipv6" ]; then
    printf '\nCurrent IPv6 addresses matches Pi-hole configuration. Exiting!\n'
    exit 0

else

# Update the IPv6 address in setupVars.conf with the host's IPv6 address
    printf '\nUpdating Pi-hole configuration...\n'
    sed -i "s/IPV6_ADDRESS=.*/IPV6_ADDRESS=${current_ipv6}/g" /etc/pihole/setupVars.conf;

# Run pihole -g to pick up changes
    printf '\nReloading Pi-hole...\n\n'
    pihole -g

# All done!
    printf '\nDone!\n'
    exit 1
fi
